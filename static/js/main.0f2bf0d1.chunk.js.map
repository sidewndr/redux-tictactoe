{"version":3,"sources":["shared/globalStyles/globalStyles.jsx","store/gameReducer.js","store/scoreReducer.js","store/index.js","components/cell.jsx","components/gameField.jsx","components/score.jsx","components/info.jsx","pages/page.jsx","index.js"],"names":["GlobalStyles","createGlobalStyle","defaultState","currentTurn","fieldValues","winnerInfo","winnerValue","winnerLine","ADD_VALUE","CHANGE_CURRENT_TURN","SET_WINNER","RESTART_GAME","xScore","drawScore","oScore","rootReducer","combineReducers","game","state","action","type","temp","payload","tempValues","fill","tempWinnerInfo","Object","entries","forEach","item","fromEntries","score","store","createStore","composeWithDevTools","CellVariant","CellStl","styled","div","variant","css","Cell","value","onClick","GameFieldStl","GameField","dispatch","useDispatch","useSelector","useEffect","calculatedWinner","line","a","b","c","filter","length","calculateWinner","handleClick","index","handleSetVariant","i","map","uuid","ScoreContainerStl","ScoreStl","ScoreTitleStl","ScoreValueStl","Score","setTitle","arr","InfoStl","Info","winner","PageStl","Page","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0f2bf0d1.chunk.js","sourcesContent":["import {createGlobalStyle} from \"styled-components\";\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    outline: 0;\r\n    box-sizing: border-box;\r\n  }\r\n  \r\n  body {\r\n    font-family: 'Open Sans', sans-serif;\r\n    font-size: 40px;\r\n    background-color: black;\r\n    color: white;\r\n  }\r\n`","const defaultState = {\r\n  currentTurn: 'X',\r\n\r\n  fieldValues: [\r\n    null, null, null,\r\n    null, null, null,\r\n    null, null, null\r\n  ],\r\n\r\n  winnerInfo: {\r\n    winnerValue: null,\r\n    winnerLine: null\r\n  }\r\n}\r\n\r\nconst ADD_VALUE = 'ADD_VALUE'\r\nconst CHANGE_CURRENT_TURN = 'CHANGE_CURRENT_TURN'\r\nconst SET_WINNER = 'SET_WINNER'\r\nconst RESTART_GAME = 'RESTART_GAME'\r\n\r\nexport const gameReducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case ADD_VALUE: {\r\n      const temp = [...state.fieldValues]\r\n      temp[action.payload] = state.currentTurn\r\n\r\n      return {...state, fieldValues: [...temp]}\r\n    }\r\n\r\n    case CHANGE_CURRENT_TURN:\r\n      return {...state, currentTurn: state.currentTurn === 'X' ? 'O' : 'X'}\r\n\r\n    case SET_WINNER:\r\n      return {...state, winnerInfo: action.payload}\r\n\r\n    case RESTART_GAME: {\r\n      const tempValues = [...state.fieldValues]\r\n      tempValues.fill(null)\r\n\r\n      let tempWinnerInfo = Object.entries(state.winnerInfo)\r\n      tempWinnerInfo.forEach((item) => {\r\n        item.fill(null, 1)\r\n      })\r\n      tempWinnerInfo = Object.fromEntries(tempWinnerInfo)\r\n\r\n      return {...state, fieldValues: [...tempValues], winnerInfo: {...tempWinnerInfo}}\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\nexport const addValueAction = (payload) => ({type: ADD_VALUE, payload})\r\nexport const changeCurrentTurnAction = () => ({type: CHANGE_CURRENT_TURN})\r\nexport const setWinnerAction = (payload) => ({type: SET_WINNER, payload})\r\nexport const restartGameAction = () => ({type: RESTART_GAME})\r\n\r\nexport const calculateWinner = (fieldValues) => {\r\n  const winnerInfo = {\r\n    winnerValue: null,\r\n    winnerLine: null\r\n  }\r\n\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n\r\n    [0, 4, 8],\r\n    [2, 4, 6]\r\n  ]\r\n\r\n  lines.forEach((line) => {\r\n    const [a, b, c] = line\r\n\r\n    if (fieldValues[a] && fieldValues[a] === fieldValues[b] && fieldValues[a] === fieldValues[c]) {\r\n      winnerInfo.winnerValue = fieldValues[a]\r\n      winnerInfo.winnerLine = [a, b, c]\r\n    }\r\n  })\r\n\r\n  const emptyValues = fieldValues.filter((item) => item === null)\r\n  if (emptyValues.length === 0 && !winnerInfo.winnerValue) {\r\n    winnerInfo.winnerValue = 'Draw'\r\n  }\r\n\r\n  return winnerInfo\r\n}","const defaultState = {\r\n  xScore: 0,\r\n  drawScore: 0,\r\n  oScore: 0\r\n}\r\n\r\nconst ADD_SCORE = 'ADD_SCORE'\r\n\r\nexport const scoreReducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_SCORE': {\r\n      if (action.payload === 'X') {\r\n        return {...state, xScore: state.xScore + 1}\r\n      }\r\n\r\n      if (action.payload === 'O') {\r\n        return {...state, oScore: state.oScore + 1}\r\n      }\r\n\r\n      if (action.payload === 'Draw') {\r\n        return {...state, drawScore: state.drawScore + 1}\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\nexport const addScoreAction = (payload) => ({type: ADD_SCORE, payload})","import {combineReducers, createStore} from \"redux\";\r\nimport {gameReducer} from \"./gameReducer\";\r\nimport {scoreReducer} from \"./scoreReducer\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\n\r\nconst rootReducer = combineReducers({\r\n  game: gameReducer,\r\n  score: scoreReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools())","import React from 'react'\r\nimport styled, {css} from 'styled-components'\r\n\r\nexport const CellVariant = {\r\n  default: 'default',\r\n  win: 'win',\r\n  lose: 'lose'\r\n}\r\n\r\nexport const CellStl = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  cursor: pointer;\r\n  user-select: none;\r\n  \r\n  ${({variant}) => {\r\n    if (variant === CellVariant.default) {\r\n      return undefined\r\n    }  \r\n    \r\n    if (variant === CellVariant.win) {\r\n      return css`\r\n        color: white;\r\n        font-weight: bold;\r\n      `\r\n    }\r\n    \r\n    if (variant === CellVariant.lose) {\r\n      return css`\r\n        color: gray;\r\n      `\r\n    }\r\n  }}\r\n`\r\n\r\n\r\nexport const Cell = ({value, variant, onClick}) => {\r\n  return (\r\n    <CellStl\r\n      variant={variant}\r\n      onClick={onClick}\r\n    >\r\n      {value}\r\n    </CellStl>\r\n  )\r\n}","import React, {useEffect} from 'react'\r\nimport styled from 'styled-components'\r\nimport {v4 as uuid} from 'uuid'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Cell, CellStl, CellVariant} from \"./cell\";\r\nimport {\r\n  addValueAction,\r\n  calculateWinner,\r\n  changeCurrentTurnAction,\r\n  restartGameAction,\r\n  setWinnerAction\r\n} from \"../store/gameReducer\";\r\nimport {addScoreAction} from \"../store/scoreReducer\";\r\n\r\n\r\nconst GameFieldStl = styled.div`\r\n  display: inline-grid;\r\n  grid-template-columns: repeat(3, 150px);\r\n  grid-template-rows: repeat(3, 150px);\r\n\r\n  ${CellStl}:nth-child(1) {\r\n    border-right: white 5px solid;\r\n    border-bottom: white 5px solid;\r\n  }\r\n  \r\n  ${CellStl}:nth-child(2) {\r\n    border-bottom: white 5px solid;\r\n  }\r\n  \r\n  ${CellStl}:nth-child(3) {\r\n    border-left: white 5px solid;\r\n    border-bottom: white 5px solid;\r\n  }\r\n  \r\n  ${CellStl}:nth-child(4) {\r\n    border-right: white 5px solid;\r\n  }\r\n  \r\n  ${CellStl}:nth-child(6) {\r\n    border-left: white 5px solid;\r\n  }\r\n  \r\n  ${CellStl}:nth-child(7) {\r\n    border-top: white 5px solid;\r\n    border-right: white 5px solid;\r\n  }\r\n  \r\n  ${CellStl}:nth-child(8) {\r\n    border-top: white 5px solid;\r\n  }\r\n  \r\n  ${CellStl}:nth-child(9) {\r\n    border-top: white 5px solid;\r\n    border-left: white 5px solid;\r\n  }\r\n`\r\n\r\n\r\nexport const GameField = () => {\r\n  const dispatch = useDispatch()\r\n  const fieldValues = useSelector((state) => state.game.fieldValues)\r\n  const {winnerValue, winnerLine} = useSelector((state) => state.game.winnerInfo)\r\n\r\n  useEffect(() => {\r\n    const calculatedWinner = calculateWinner(fieldValues)\r\n    if (calculatedWinner.winnerValue) {\r\n      dispatch(setWinnerAction(calculatedWinner))\r\n    }\r\n  }, [fieldValues])\r\n\r\n  useEffect(() => {\r\n    dispatch(addScoreAction(winnerValue))\r\n  }, [winnerValue])\r\n\r\n  const handleClick = (index) => {\r\n    if (!fieldValues[index]) {\r\n      dispatch(addValueAction(index))\r\n      dispatch(changeCurrentTurnAction())\r\n    }\r\n\r\n    if (winnerValue) {\r\n      dispatch(restartGameAction())\r\n    }\r\n  }\r\n\r\n  const handleSetVariant = (index) => {\r\n    if (winnerValue && winnerLine) {\r\n      for (let i = 0; i < winnerLine.length; i++) {\r\n        if (winnerLine[i] === index) {\r\n          return CellVariant.win\r\n        }\r\n      }\r\n\r\n      return CellVariant.lose\r\n    }\r\n\r\n    if (winnerValue && !winnerLine) {\r\n      return CellVariant.lose\r\n    }\r\n\r\n    if (!winnerValue) {\r\n      return CellVariant.default\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <GameFieldStl>\r\n      {\r\n        fieldValues.map((item, index) => (\r\n          <Cell\r\n            key={uuid()}\r\n            value={item}\r\n            variant={handleSetVariant(index)}\r\n            onClick={() => handleClick(index)}\r\n          />\r\n        ))\r\n      }\r\n    </GameFieldStl>\r\n  )\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {useSelector} from \"react-redux\";\r\nimport {v4 as uuid} from \"uuid\";\r\n\r\n\r\nconst ScoreContainerStl = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 150px);\r\n  justify-items: center;\r\n  user-select: none;\r\n`\r\n\r\nconst ScoreStl = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`\r\n\r\nconst ScoreTitleStl = styled.div`\r\n  font-size: 28px;\r\n`\r\n\r\nconst ScoreValueStl = styled.div`\r\n  margin-top: 20px;\r\n`\r\n\r\n\r\nexport const Score = () => {\r\n  const score = useSelector((state) => state.score)\r\n\r\n  const setTitle = (arr) => {\r\n    switch (arr[0]) {\r\n      case 'xScore': return 'x'\r\n      case 'oScore': return 'o'\r\n      default: return '-'\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ScoreContainerStl>\r\n      {\r\n        Object.entries(score).map((item) => (\r\n          <ScoreStl\r\n            key={uuid()}\r\n          >\r\n            <ScoreTitleStl>\r\n              {\r\n                setTitle(item)\r\n              }\r\n            </ScoreTitleStl>\r\n            <ScoreValueStl>\r\n              {item[1]}\r\n            </ScoreValueStl>\r\n          </ScoreStl>\r\n        ))\r\n      }\r\n    </ScoreContainerStl>\r\n  )\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {useSelector} from \"react-redux\";\r\n\r\n\r\nconst InfoStl = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 200px);\r\n  font-size: 32px;\r\n  \r\n  & > div:nth-child(1) {\r\n    justify-self: center;\r\n  }\r\n\r\n  & > div:nth-child(2) {\r\n    justify-self: center;\r\n  }\r\n`\r\n\r\n\r\nexport const Info = () => {\r\n  const winner = useSelector((state) => state.game.winnerInfo.winnerValue)\r\n  const currentTurn = useSelector((state) => state.game.currentTurn)\r\n\r\n  return (\r\n    <InfoStl>\r\n      <div>\r\n        {winner ? 'Победил: ' : 'Текущий ход: '}\r\n      </div>\r\n      <div>\r\n        {winner ? winner : currentTurn}\r\n      </div>\r\n    </InfoStl>\r\n  )\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {GameField} from \"../components/gameField\";\r\nimport {Score} from \"../components/score\";\r\nimport {Info} from \"../components/info\";\r\n\r\n\r\nconst PageStl = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 1fr 8fr 2fr;\r\n  justify-items: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n`\r\n\r\n\r\nexport const Page = () => {\r\n  return (\r\n    <PageStl>\r\n      <Info />\r\n      <GameField />\r\n      <Score />\r\n    </PageStl>\r\n  )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {GlobalStyles} from \"./shared/globalStyles/globalStyles\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./store\";\r\nimport {Page} from \"./pages/page\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <GlobalStyles />\r\n      <Page />\r\n    </Provider>\r\n  )\r\n}\r\n\r\nReactDOM.render(<App />,  document.getElementById('root'));"],"sourceRoot":""}